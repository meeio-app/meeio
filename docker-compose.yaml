services:
    db:
        image: postgres:${POSTGRES_VERSION}-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - db:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5

    api:
        image: ghcr.io/meeio-app/backend:0.0.28
        restart: unless-stopped
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
            DATABASE_VERSION: ${POSTGRES_VERSION}
            DATABASE_CHARSET: utf8
            APP_SECRET: ${APP_SECRET}
            MESSENGER_TRANSPORT_DSN: doctrine://default
            CORS_ALLOW_ORIGIN: '*'
            LOCK_DSN: flock
            NOREPLY_SENDER: ${NOREPLY_SENDER}
            MAILER_DSN: ${MAILER_DSN}
            TRUSTED_PROXIES: ${TRUSTED_PROXIES}
        volumes:
            - app_logs:/var/www/html/var/logs
        depends_on:
            db:
                condition: service_healthy
    app:
        image: ghcr.io/meeio-app/frontend:0.0.4
        restart: unless-stopped
        environment:
            NUXT_PUBLIC_API_BASE_URL: ${NUXT_PUBLIC_API_BASE_URL}
        depends_on:
            - api

    docs:
        image: ghcr.io/meeio-app/docs:0.0.1
        restart: unless-stopped

volumes:
    db:
    app_logs:
