services:
    db:
        image: postgres:${POSTGRES_VERSION}-alpine
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        tty: true
        stdin_open: true
        volumes:
            - db:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - internal
            - proxy_default

    api:
        image: ghcr.io/meeio-app/backend:0.0.1
        restart: unless-stopped
        tty: true
        stdin_open: true
        environment:
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?serverVersion=${POSTGRES_VERSION}&charset=utf8
            APP_SECRET: ${APP_SECRET}
            MESSENGER_TRANSPORT_DSN: 'doctrine://default?auto_setup=0'
            CORS_ALLOW_ORIGIN: '*'
            LOCK_DSN: 'flock'
            NOREPLY_SENDER: ${NOREPLY_SENDER}
            MAILER_DSN: ${MAILER_DSN}
            TRUSTED_PROXIES: ${TRUSTED_PROXIES}
        volumes:
            - logs:/var/www/html/var/logs
        networks:
            - internal
            - proxy_default
        depends_on:
            db:
                condition: service_healthy
    app:
        image: ghcr.io/meeio-app/frontend:0.0.2
        restart: unless-stopped
        tty: true
        stdin_open: true
        environment:
            NUXT_PUBLIC_API_BASE_URL: ${NUXT_PUBLIC_API_BASE_URL}
        depends_on:
            - api
        networks:
            - internal
            - proxy_default

    docs:
        image: ghcr.io/meeio-app/docs:0.0.1
        restart: unless-stopped
        tty: true
        stdin_open: true
        networks:
            - internal
            - proxy_default

volumes:
    db:
    logs:

networks:
  internal:
    driver: bridge
  proxy_default:
    external: true
